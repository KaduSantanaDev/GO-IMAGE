services:

  app:
    build: 
      context: node
    entrypoint: ["dockerize", "-wait", "tcp://db:3306", "-timeout", "20s", "node", "index.js"]
    volumes:
      - ./node:/usr/src/app
    tty: true
    container_name: app
    ports:
      - "3000:3000"
    depends_on:
      - db
    networks:
      - node-network
  nginx:
    build: 
      context: nginx
    container_name: nginx-proxy
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    entrypoint: ["dockerize", "-wait", "http://app:3000", "-timeout", "30s", "nginx", "-g", "daemon off;"]
    networks:
      - node-network
  db:
    image: mysql:5.7
    command: --innodb-use-native-aio=0
    container_name: db
    restart: always
    tty: true
    volumes:
      - ./mysql:/var/lib/mysql
    environment:
      - MYSQL_DATABASE=fullcycle
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_USER=kadu
      - MYSQL_PASSWORD=1234
    networks:
      - node-network
      
networks:
  node-network:
    driver: bridge